{"version":3,"sources":["App.tsx","index.tsx"],"names":["goods","App","state","selectedGood","clear","setState","addGoods","good","this","message","className","type","onClick","map","classNames","includes","React","Component","ReactDOM","render","document","getElementById"],"mappings":"oQAKaA,EAAQ,CACnB,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAMWC,EAAb,4MACEC,MAAQ,CACNC,aAAc,OAFlB,EAKEC,MAAQ,WACN,EAAKC,SAAS,CAAEF,aAAc,MANlC,EASEG,SAAW,SAACC,GACN,EAAKL,MAAMC,eAAiBI,GAC9B,EAAKH,QAGP,EAAKC,SAAS,CAAEF,aAAcI,KAdlC,4CAiBE,WAAU,IAAD,OACCJ,EAAiBK,KAAKN,MAAtBC,aACJM,EAAU,oBAMd,OAJIN,IACFM,EAAO,UAAMN,EAAN,iBAIP,uBAAMO,UAAU,oBAAhB,UAEE,qBAAIA,UAAU,sCAAd,UACGD,EAEAN,GACC,wBACE,UAAQ,cACRQ,KAAK,SACLD,UAAU,cACV,aAAW,QACXE,QAASJ,KAAKJ,WAKpB,uBAAOM,UAAU,QAAjB,SACE,gCACGV,EAAMa,KAAI,SAAAN,GAAI,OACb,qBACE,UAAQ,OAERG,UAAWI,IAAW,OACpB,CACE,+BAAgCX,EAC7BY,SAASR,KANlB,UASE,6BACGJ,IAAiBI,EAChB,wBACE,UAAQ,eACRI,KAAK,SACLD,UAAU,iBACVE,QAAS,EAAKR,MAJhB,eASA,wBACE,UAAQ,YACRO,KAAK,SACLD,UAAU,SACVE,QAAS,kBACP,EAAKN,SAASC,IALlB,iBAaJ,oBAAI,UAAQ,YAAYG,UAAU,eAAlC,SACGH,MAhCEA,iBA/CrB,GAAyBS,IAAMC,WClB/BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.b7280c50.chunk.js","sourcesContent":["import React from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport classNames from 'classnames';\n\nexport const goods = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\ntype State = {\n  selectedGood: string\n};\nexport class App extends React.Component<{}, State> {\n  state = {\n    selectedGood: 'Jam',\n  };\n\n  clear = () => {\n    this.setState({ selectedGood: '' });\n  };\n\n  addGoods = (good: string) => {\n    if (this.state.selectedGood === good) {\n      this.clear();\n    }\n\n    this.setState({ selectedGood: good });\n  };\n\n  render() {\n    const { selectedGood } = this.state;\n    let message = 'No goods selected';\n\n    if (selectedGood) {\n      message = `${selectedGood} is selected`;\n    }\n\n    return (\n      <main className=\"section container\">\n\n        <h1 className=\"title is-flex is-align-items-center\">\n          {message}\n\n          {selectedGood && (\n            <button\n              data-cy=\"ClearButton\"\n              type=\"button\"\n              className=\"delete ml-3\"\n              aria-label=\"clear\"\n              onClick={this.clear}\n            />\n          )}\n        </h1>\n\n        <table className=\"table\">\n          <tbody>\n            {goods.map(good => (\n              <tr\n                data-cy=\"Good\"\n                key={good}\n                className={classNames('Good',\n                  {\n                    'has-background-success-light': selectedGood\n                      .includes(good),\n                  })}\n              >\n                <td>\n                  {selectedGood === good ? (\n                    <button\n                      data-cy=\"RemoveButton\"\n                      type=\"button\"\n                      className=\"button is-info\"\n                      onClick={this.clear}\n                    >\n                      -\n                    </button>\n                  ) : (\n                    <button\n                      data-cy=\"AddButton\"\n                      type=\"button\"\n                      className=\"button\"\n                      onClick={() => (\n                        this.addGoods(good)\n                      )}\n                    >\n                      +\n                    </button>\n                  )}\n                </td>\n\n                <td data-cy=\"GoodTitle\" className=\"is-vcentered\">\n                  {good}\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </main>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}